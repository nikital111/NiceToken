/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Demo, DemoInterface } from "../Demo";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "receiveFunds",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_to",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000bcc38038062000bcc8339818101604052810190620000379190620001fb565b6200006760405180606001604052806022815260200162000baa6022913982620000ae60201b620003241760201c565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000403565b620001508282604051602401620000c79291906200028d565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506200015460201b60201c565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b6000620001946200018e84620002f1565b620002c8565b905082815260208101848484011115620001b357620001b2620003e3565b5b620001c084828562000343565b509392505050565b600082601f830112620001e057620001df620003de565b5b8151620001f28482602086016200017d565b91505092915050565b600060208284031215620002145762000213620003ed565b5b600082015167ffffffffffffffff811115620002355762000234620003e8565b5b6200024384828501620001c8565b91505092915050565b6000620002598262000327565b62000265818562000332565b93506200027781856020860162000343565b6200028281620003f2565b840191505092915050565b60006040820190508181036000830152620002a981856200024c565b90508181036020830152620002bf81846200024c565b90509392505050565b6000620002d4620002e7565b9050620002e2828262000379565b919050565b6000604051905090565b600067ffffffffffffffff8211156200030f576200030e620003af565b5b6200031a82620003f2565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156200036357808201518184015260208101905062000346565b8381111562000373576000848401525b50505050565b6200038482620003f2565b810181811067ffffffffffffffff82111715620003a657620003a5620003af565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61079780620004136000396000f3fe6080604052600436106100375760003560e01c80625c33e11461008257806312065fe01461008c57806368742da6146100b75761007d565b3661007d5761007b6040518060400160405280601381526020017f45617379206d6f6e65792c207468616e6b732000000000000000000000000000815250336100e0565b005b600080fd5b61008a61017c565b005b34801561009857600080fd5b506100a16101bd565b6040516100ae919061062a565b60405180910390f35b3480156100c357600080fd5b506100de60048036038101906100d99190610497565b6101c5565b005b61017882826040516024016100f6929190610583565b6040516020818303038152906040527f319af333000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506103c0565b5050565b6101bb6040518060400160405280601381526020017f45617379206d6f6e65792c207468616e6b732000000000000000000000000000815250336100e0565b565b600047905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610253576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024a9061060a565b60405180910390fd5b60004711610296576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028d906105ea565b60405180910390fd5b60004790508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156102e1573d6000803e3d6000fd5b506103206040518060400160405280600981526020017f4b207061706520455a00000000000000000000000000000000000000000000008152506103e9565b5050565b6103bc828260405160240161033a9291906105b3565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506103c0565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b61047f816040516024016103fd9190610561565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506103c0565b50565b6000813590506104918161074a565b92915050565b6000602082840312156104ad576104ac6106e2565b5b60006104bb84828501610482565b91505092915050565b6104cd81610661565b82525050565b60006104de82610645565b6104e88185610650565b93506104f88185602086016106af565b610501816106e7565b840191505092915050565b6000610519600883610650565b9150610524826106f8565b602082019050919050565b600061053c601183610650565b915061054782610721565b602082019050919050565b61055b816106a5565b82525050565b6000602082019050818103600083015261057b81846104d3565b905092915050565b6000604082019050818103600083015261059d81856104d3565b90506105ac60208301846104c4565b9392505050565b600060408201905081810360008301526105cd81856104d3565b905081810360208301526105e181846104d3565b90509392505050565b600060208201905081810360008301526106038161050c565b9050919050565b600060208201905081810360008301526106238161052f565b9050919050565b600060208201905061063f6000830184610552565b92915050565b600081519050919050565b600082825260208201905092915050565b600061066c82610685565b9050919050565b600061067e82610685565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156106cd5780820151818401526020810190506106b2565b838111156106dc576000848401525b50505050565b600080fd5b6000601f19601f8301169050919050565b7f6e6f2066756e6473000000000000000000000000000000000000000000000000600082015250565b7f596f7520617265206e6f74206f776e6572000000000000000000000000000000600082015250565b61075381610673565b811461075e57600080fd5b5056fea264697066735822122083709179214052be6b06a05582f13f3342fdef3d185d70108d4662562fa3e8ee64736f6c634300080700334465706c6f79696e67206120477265657465722077697468206772656574696e673a";

type DemoConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DemoConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Demo__factory extends ContractFactory {
  constructor(...args: DemoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _greeting: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Demo> {
    return super.deploy(_greeting, overrides || {}) as Promise<Demo>;
  }
  override getDeployTransaction(
    _greeting: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_greeting, overrides || {});
  }
  override attach(address: string): Demo {
    return super.attach(address) as Demo;
  }
  override connect(signer: Signer): Demo__factory {
    return super.connect(signer) as Demo__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DemoInterface {
    return new utils.Interface(_abi) as DemoInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Demo {
    return new Contract(address, _abi, signerOrProvider) as Demo;
  }
}
